<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<title>timeconceptSearch</title>
		<link rel="stylesheet" type="text/css" href="../css/default.css">
		<!-- jQuery -->
		<script src="http://code.jquery.com/jquery-latest.js"></script>
		
		<!-- version 0.7.5 -->
		<script src="../vendor/leaflet/leaflet-src.js"></script>
		<link rel="stylesheet" href="../vendor/leaflet/leaflet.css" />
		<!-- https://github.com/ursudio/webgl-heatmap-leaflet -->
		<script src="../vendor/webgl-heatmap-leaflet/webgl-heatmap.js"></script>
		<script src="../vendor/webgl-heatmap-leaflet/webgl-heatmap-leaflet.js"></script>
		<!-- https://github.com/devbridge/jQuery-Autocomplete -->
		<script src="../vendor/jquery.autocomplete/jquery.autocomplete.js"></script>
		<!-- https://github.com/fgnass/spin.js -->
		<script src="../vendor/spin.js/spin.js"></script>
		<!-- https://github.com/makinacorpus/Leaflet.Spin -->
		<script src="../vendor/leaflet.spin/leaflet.spin.js"></script>
		<!-- https://github.com/Leaflet/Leaflet.markercluster -->
		<link rel="stylesheet" href="../vendor/leaflet.markercluster/MarkerCluster.css" />
		<link rel="stylesheet" href="../vendor/leaflet.markercluster/MarkerCluster.Default.css" />
		<script src="../vendor/leaflet.markercluster/leaflet.markercluster-src.js"></script>
		<!-- https://github.com/ardhi/Leaflet.MousePosition -->
		<link rel="stylesheet" href="../vendor/leaflet.mouseposition/L.Control.MousePosition.css" />
		<script src="../vendor/leaflet.mouseposition/L.Control.MousePosition.js"></script>
		<!-- https://github.com/zenorocha/clipboard.js -->
		<script src="../vendor/clipboard.js/clipboard.js"></script>
		<!-- https://github.com/mapbox/leaflet-image -->
		<script src='../vendor/leaflet-image/leaflet-image.js'></script>
		<!-- https://github.com/eligrey/FileSaver.js -->
		<script src='../vendor/filesaver.js/FileSaver.js'></script>
		<script>window.L_PREFER_CANVAS = true;</script>
		<!-- Config File -->
		<script src="../Config.js"></script>
		<style>
			.autocomplete-suggestions { border: 1px solid #999; border-radius: 5px; background: #FFF; overflow: auto; }
			.autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }
			.autocomplete-no-suggestion { padding: 2px 5px;}
			.autocomplete-selected { background: #F0F0F0; }
			.autocomplete-suggestions strong { font-weight: bold; color: red; }
			.search { float:left; font-size: 16px; padding: 8px; border: 1px solid #888; width: 250px; height:45px; border-radius: 0px; }
			.ac { z-index: 2; background: transparent; position: absolute; border-radius: 5px; }
			.achint { color: #AAA; background: #FFF; z-index: 1; position: absolute; border-radius: 5px; }
			.seldb { float:left; font-size: 16px; padding: 8px; border: 1px solid #888; width: 150px; height:45px; border-radius: 0px; margin-right: 10px; border-radius: 5px; }
			#div_autocomplete { width: auto; height: 45px; float:right; margin-top: 0px; margin-left:0px; margin-right:10px; background-color: transparent;}

			.map { width:100%; height: 100%;}
			#maptitle {float:left; width:150px; background: transparent; padding:3px; opacity: 0.7; font-size: 16px;}
			.title { font-size: 20px; float: left; font-weight: normal; }
			#mapselect {float:left; width:525px; background: white; padding:20px; opacity: 0.85; border-radius: 10px;}
			.mapdropdown { font-size: 16px; padding: 8px; border: 1px solid #888; width: 150px; height:45px; border-radius: 5px; margin-right: 10px; float:left; margin-bottom: 8px; margin-top: 8px;}
			.mapinput { font-size: 16px; padding: 8px; border: 1px solid #888; width: 130px; height:25px; border-radius: 5px; margin-right: 10px; float:left; margin-bottom: 8px; margin-top: 8px;}
			.maplabel {  display:table-cell; vertical-align:bottom;  padding: 0px; border: none; width: auto; height:45px; float:left;}
			.button { float:right; font-size: 18px; padding: 10px; line-height: 1.6em; background-color: #FFF; background-repeat: repeat-x; border-color: #888; color: #fff; border-radius: 5px; border-style: solid; border-width: 1px; cursor: pointer; text-align: center; vertical-align: middle; height: 23px; margin-left: 10px;}
			#maptitle {float:left; width:150px; font-size: 24px; font-weight: 700; padding: 20px;}
		</style>
	</head>
	<body>
		<div id="map" class="map"></div>
		<script>
			var url = Config.servletURL;
			var opttype;
			var timeconcept;
			var db;
			var selectdb = "";
			var copyurl = "";
			var databases = [["no filter", ""], ["Arachne", "dumpapi.arachne"], ["Pleiades", "dumpapi.pleiades"]];
			var autocompleteURL = url + "autocomplete";
			var heatmapURL = url + "getHeatmapData";
			var radiusInMeter = 80000;

			// SET MAP
			var baseLayer = Config.baseLayer;
			var heatmap = new L.TileLayer.WebGLHeatMap({
				size: 30000,
				autoresize: true,
				intensityToAlpha: false
			});
			heatmap.options.gradientTexture = "../img/red.png";
			heatmap.options.size = radiusInMeter;
			var mapY = 50.009167;
			var mapX = 4.666389;
			var mapZOOM = 5;
			var map = new L.Map('map', {
				center: new L.LatLng(mapY, mapX),
				zoom: mapZOOM,
				layers: [baseLayer]
			});
			// SET SCALE
			L.control.scale().addTo(map);
			// SET maptitle
			var maptitle = L.control({position: 'bottomleft'});
			maptitle.onAdd = function (map) {
				var div = L.DomUtil.create('div', '');
				div.id = "maptitle";
				div.innerHTML = '<span>ChronOntology<br>timeconceptSearch</span><br>';
				div.firstChild.onmousedown = div.firstChild.ondblclick = L.DomEvent.stopPropagation;
				return div;
			};
			maptitle.addTo(map);
			//L.control.mousePosition().addTo(map);

			// ADD CONTROLS
			/*var maptitle = L.control({position: 'bottomleft'});
			maptitle.onAdd = function (map) {
				var div = L.DomUtil.create('div', '');
				div.id = "maptitle";
				div.innerHTML = '<span>i3.timeconceptSearch</span><br>';
				div.firstChild.onmousedown = div.firstChild.ondblclick = L.DomEvent.stopPropagation;
				return div;
			};
			maptitle.addTo(map);*/
			var mapselect = L.control({position: 'topright'});
			mapselect.onAdd = function (map) {
				var div = L.DomUtil.create('div', '');
				div.id = "mapselect";
				div.innerHTML += '<div id="div_autocomplete">';
				div.innerHTML = '<select class="seldb" id="dbselect"></select>';
				div.innerHTML += "<input type='text' class='search ac' id='autocomplete' />";
				div.innerHTML += "<input type='text' class='search achint' id='autocomplete-hint' disabled='disabled' />";
				div.innerHTML += '</div>';
				
				
				div.innerHTML += '<input type="image" src="../img/clear.png" class="button" id="clear" alt="clear map" title="clear map">';
				div.innerHTML += '<input type="image" src="../img/world.png" class="button" id="show" alt="show data" title="show data">';
				
				div.firstChild.onmousedown = div.firstChild.ondblclick = L.DomEvent.stopPropagation;
				return div;
			};
			mapselect.addTo(map);


			var bbox;
			var markers;

			// INIT AUTOCOMPLETE
			$('#autocomplete').autocomplete({
				minChars: 2,
				showNoSuggestionNotice: true,
				noSuggestionNotice: 'Sorry, no matching results',
				serviceUrl: function () {
					var url = autocompleteURL + "?db=" + $("#dbselect").val();
					return url;
				},
				lookupFilter: function (suggestion, originalQuery, queryLowerCase) {
					var res = new RegExp('\\b' + $.Autocomplete.utils.escapeRegExChars(queryLowerCase), 'gi');
					return res.test(suggestion.value);
				},
				onSelect: function (response) {
					try {
						response = JSON.parse(response);
					} catch (e) {
					}
					//console.info(response);
					timeconcept = response.value;
					switch (response.provenance) {
						case "arachne":
							opttype = "Fundort";
							db = "dumpapi.arachne";
							break;
						case "pleiades":
							opttype = "";
							db = "dumpapi.pleiades";
							break;
						default:
							opttype = "";
							db = "";
					}
					//console.info("opttype > " + opttype);
					$('#autocomplete').prop('disabled', true);
					$("#clear").prop('disabled', false).css('opacity', 1).css('cursor', "pointer");
					$("#show").prop('disabled', false).css('opacity', 1).css('cursor', "pointer");
				},
				onHint: function (hint) {
					$('#autocomplete-hint').val(hint);
				},
				onInvalidateSelection: function () {
					console.info('You selected: none');
				}
			});

			// GET SPATIAL DATA AND MAP IT
			function getHeatmapgeoJSON() {
				map.spin(true, {top: '50%', left: '50%', lines: 15, length: 50, width: 15, radius: 50, opacity: 0.3, shadow: true});
				$.ajax({
					type: 'GET',
					url: heatmapURL,
					data: {
						db: db,
						timeconcept: timeconcept,
						opttype: opttype
					},
					error: function (jqXHR, textStatus, errorThrown) {
						map.spin(false);
						clear();
						alert(errorThrown);
					},
					success: function (geojson) {
						try {
							geojson = JSON.parse(geojson);
						} catch (e) {
						}
						bbox = L.polygon([
							[geojson.extent.upperleft.lat, geojson.extent.upperleft.lon],
							[geojson.extent.upperright.lat, geojson.extent.upperright.lon],
							[geojson.extent.lowerright.lat, geojson.extent.lowerright.lon],
							[geojson.extent.lowerleft.lat, geojson.extent.lowerleft.lon],
							[geojson.extent.upperleft.lat, geojson.extent.upperleft.lon],
						]).addTo(map);
						setTimeout(function () {
							map.setView([geojson.centroid.lat, geojson.centroid.lon], 3);
						}, 1);
						for (var i = 0; i < geojson.features.length; i++) {
							heatmap.addDataPoint(geojson.features[i].geometry.coordinates[1], geojson.features[i].geometry.coordinates[0], 100);
						}
						map.addLayer(heatmap);
						map.spin(false);
						//getMarkergeoJSON();
					}
				});
			}
			function getMarkergeoJSON() {
				copyurl = heatmapURL + "?db=" + db + "&timeconcept=" + timeconcept + "&opttype=" + opttype;
				$.ajax({
					type: 'GET',
					url: heatmapURL,
					data: {
						db: db,
						timeconcept: timeconcept,
						opttype: opttype
					},
					error: function (jqXHR, textStatus, errorThrown) {
						map.spin(false);
						clear();
						alert(errorThrown);
					},
					success: function (geojson) {
						try {
							geojson = JSON.parse(geojson);
						} catch (e) {
						}
						map.spin(false);
						setMarker(geojson);
						$("#clear").prop('disabled', false).css('opacity', 1).css('cursor', "pointer");
						$("#copy").prop('disabled', false).css('opacity', 1).css('cursor', "pointer");
						$("#show").prop('disabled', true).css('opacity', 0.5).css('cursor', "no-drop");
					}
				});
			}
			function setMarker(geojson) {
				markers = null;
				markers = L.markerClusterGroup();
				var marker = L.geoJson(geojson, {
				});
				markers.addLayer(marker);
				//map.addLayer(markers);
			}

			// FUNCTIONS FOR BUTTONS
			$('#clear').click(function (e) {
				clear();
			});
			$('#copy').click(function (e) {
				setAttributeForCopy();
			});
			$('#image').click(function (e) {
				saveImage();
			});
			$('#show').click(function (e) {
				getHeatmapgeoJSON();
			});

			// GENERAL FUNCTIONS
			function clear() {
				$('#autocomplete').val("");
				$('#autocomplete').prop('disabled', false);
				$("#clear").prop('disabled', true).css('opacity', 0.5).css('cursor', "no-drop");
				$("#copy").prop('disabled', true).css('opacity', 0.5).css('cursor', "no-drop");
				$("#show").prop('disabled', true).css('opacity', 0.5).css('cursor', "no-drop");
				$('#dbselect').val("");
				if (bbox) {
					map.removeLayer(bbox);
				}
				if (markers) {
					map.removeLayer(markers);
				}
				if (heatmap) {
					heatmap.clearData();
					map.removeLayer(heatmap);
				}
				setTimeout(function () {
					map.setView([mapY, mapX], mapZOOM);
				}, 1);
			}
			function init() {
				var x = document.getElementById("dbselect");
				for (var i = 0; i < databases.length; i++) {
					var option = document.createElement("option");
					option.text = databases[i][0];
					option.value = databases[i][1];
					x.add(option);
				}
			}
			function setAttributeForCopy() {
				$("#copy").attr("data-clipboard-text", copyurl);
			}

			function saveImage() {
				leafletImage(map, doImage);
			}
			function doImage(err, canvas) {
				canvas.toBlob(function (canvas) {
					saveAs(canvas, "pretty image.png");
				});
			}

			// INIT
			$(document).ready(function () {
				init();
				clear();
			});
		</script>
	</body>
</html>